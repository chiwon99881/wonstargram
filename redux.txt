Redux 

1.install 

=> yarn add redux || npm install redux --save

2.why?

일단 리덕스는 state를 관리해주는놈인데
state는 global state, local state가 있음
global은 전체적인 앱에대한 state임 
예를들어 로그인을 했다면 보여지는 화면자체가 다 다름
인스타그램에서 로그인을 하지않았다면 로그인화면과 회원가입 화면 외에는 보여주지않음 그러니까 이것이 global임 
로그인이 되었는지 안되었는지에 대한 앱 전체에대한 state

local state는 컴포넌트각각에 대한 state임 
예를들어 인스타에서 사진에 좋아요를 눌렀는지 안눌렀는지
눌렀다면 하트가 빨간색이됨 안눌르면 하트는 흰색비어있음
이것이 local state 임 컴포넌트에 대한 state 

근데 이게 왜 알아야하냐면 그 state상태를 앱 전체가 공유를 해야함 쉽게 생각해서 로그인이 되었는지 앱이 알아야함 그럴러면 state를 관리해주는 놈이 필요한데 그게 redux임
그리고 local state는 공유되는 애들끼리만 공유를해야함 
예를들어 사진에 좋아요는 유저의 프로필설정과 관련 1도없음 
그 말은 좋아요 state는 유저 프로필 컴포넌트와 공유될 필요가 없음 그것또한 redux가 해주는거임 아무튼 쉽게 redux는 state를 관리해주는 놈

쉽게말해서 redux는 state DB임 
state를 저장해서 내가 필요한 state만 골라 쏙쏙 가져와서 쓰는거임

App의 모든 state는 object로 저장이된다. 
이 모든 저장된 집합을 ★store라고 하는것

그리구 그 오브젝트의 데이터를 바꾸고싶다면 ★action을 ★reducer에게 보내야한다. 이것을 ★dispatch라고 하는것

그러면 reducer는 해당 action을 비교 후 적합한 case를 찾아서 오브젝트의 데이터를 바꿔준다. 

reducer가 해당 case를 찾아서 실행하는 함수를 transformation 이라고 함. 즉 변형 즉, 데이터를 바꾼다는 의미에서 

스토어는 모든 데이터(오브젝트)와 reducer를 가지고있음  
Provider는 props로 스토어를 갖는데 스토어를 칠드런 컴포넌
트에 전달해줌 Provider는 최상위 칠드런에게 씌워줘야함 제일먼저 시작하는 컴포넌트 그리고 그 컴포넌트는 스토어를 가지고있게되고 그 컴포넌트는 컨테이너와 프레젠터가 있는데 스토어에서 받은 state(initialState)를 컨테이너가 프레젠터에게 넘겨주는거임 mapStateToProps ㄱㄱ 그럼 프레젠터는 state를 받고 그냥 state사용ㄱㄱ 그리고 actionCreator를 임포트해서 액션을 리듀서에게 주고 뭐 스테이트가 바뀌고 뭐 등등 